import textwrap

def exibir_menu():
    menu = """\n
    ============== OPÇÕES ==============
    [1]\tDepósito
    [2]\tSaque
    [3]\tHistórico
    [4]\tCadastrar cliente
    [5]\tCriar conta
    [6]\tContas cadastradas
    [0]\tEncerrar
    => """
    return input(textwrap.dedent(menu))

def realizar_deposito(saldo, valor, historico, /):
    if valor > 0:
        saldo += valor
        historico += f"Depósito:\tR$ {valor:.2f}\n"
        print("\n--- Depósito realizado com sucesso! ---")
    else:
        print("\n*** Valor inválido. Operação cancelada. ***")
    return saldo, historico

def realizar_saque(*, saldo, valor, historico, limite, saques_realizados, max_saques):
    excede_saldo = valor > saldo
    excede_limite = valor > limite
    excede_saques = saques_realizados >= max_saques

    if excede_saldo:
        print("\n*** Saldo insuficiente para saque. ***")
    elif excede_limite:
        print("\n*** Valor excede o limite permitido por saque. ***")
    elif excede_saques:
        print("\n*** Número máximo de saques atingido. ***")
    elif valor > 0:
        saldo -= valor
        historico += f"Saque:\t\tR$ {valor:.2f}\n"
        saques_realizados += 1
        print("\n--- Saque realizado com sucesso! ---")
    else:
        print("\n*** Valor inválido. Operação cancelada. ***")

    return saldo, historico

def mostrar_historico(saldo, /, *, historico):
    print("\n========== HISTÓRICO DE MOVIMENTAÇÕES ==========")
    print("Nenhuma movimentação registrada." if not historico else historico)
    print(f"\nSaldo atual:\tR$ {saldo:.2f}")
    print("================================================")

def cadastrar_cliente(clientes):
    cpf = input("CPF (apenas números): ")
    cliente = buscar_cliente(cpf, clientes)

    if cliente:
        print("\n*** CPF já cadastrado. ***")
        return

    nome = input("Nome completo: ")
    nascimento = input("Data de nascimento (dd-mm-aaaa): ")
    endereco = input("Endereço (Rua, nº - Bairro - Cidade/UF): ")

    clientes.append({
        "nome": nome,
        "nascimento": nascimento,
        "cpf": cpf,
        "endereco": endereco
    })

    print("\n--- Cliente cadastrado com sucesso! ---")

def buscar_cliente(cpf, clientes):
    encontrados = [c for c in clientes if c["cpf"] == cpf]
    return encontrados[0] if encontrados else None

def criar_conta_padrao(codigo_agencia, numero, clientes):
    cpf = input("Informe o CPF do cliente: ")
    cliente = buscar_cliente(cpf, clientes)

    if cliente:
        print("\n--- Conta criada com sucesso! ---")
        return {"agencia": codigo_agencia, "numero_conta": numero, "cliente": cliente}
    
    print("\n*** Cliente não encontrado. Não foi possível criar a conta. ***")

def mostrar_contas(contas):
    for conta in contas:
        info = f"""\n
        Agência:\t{conta['agencia']}
        Conta:\t\t{conta['numero_conta']}
        Titular:\t{conta['cliente']['nome']}
        """
        print("=" * 60)
        print(textwrap.dedent(info))

def executar_banco():
    LIMITE_SAQUES_DIARIOS = 3
    CODIGO_AGENCIA = "0001"

    total_saldo = 0
    limite_saque = 500
    historico = ""
    saques_realizados = 0
    lista_clientes = []
    lista_contas = []

    while True:
        escolha = exibir_menu()

        if escolha == "1":
            valor = float(input("Valor do depósito: R$ "))
            total_saldo, historico = realizar_deposito(total_saldo, valor, historico)

        elif escolha == "2":
            valor = float(input("Valor do saque: R$ "))
            total_saldo, historico = realizar_saque(
                saldo=total_saldo,
                valor=valor,
                historico=historico,
                limite=limite_saque,
                saques_realizados=saques_realizados,
                max_saques=LIMITE_SAQUES_DIARIOS,
            )

        elif escolha == "3":
            mostrar_historico(total_saldo, historico=historico)

        elif escolha == "4":
            cadastrar_cliente(lista_clientes)

        elif escolha == "5":
            numero_conta = len(lista_contas) + 1
            conta = criar_conta_padrao(CODIGO_AGENCIA, numero_conta, lista_clientes)
            if conta:
                lista_contas.append(conta)

        elif escolha == "6":
            mostrar_contas(lista_contas)

        elif escolha == "0":
            print("\nSessão encerrada. Até logo!")
            break

        else:
            print("\n*** Opção inválida. Tente novamente. ***")

# Executar a função principal
executar_banco()
